<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home Page Order Management</title>
    <link rel="stylesheet" href="/css/styles.css">
    <script src="https://www.gstatic.com/charts/loader.js"></script>
</head>
<style>
    .title {
        font-size: 25px;
        font-weight: 600;
        padding-bottom: 10px;
    }

    .table-container {
        padding: 15px 20px;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th,
    td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    tr:hover {
        background-color: rgb(180, 178, 178);
    }

    .chart-container {
        display: flex;
    }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

<body>
    <div class="topnav">
        <a href="/admin/user">Home Users</a>
        <a href="/admin/user/create">Create User</a>
        <a href="/admin/product">Home Products</a>
        <a href="/admin/product/create">Create Product</a>
        <a href="/admin/coupon">Home Coupons</a>
        <a href="/admin/coupon/create">Create Coupon</a>
        <a href="/admin/order">Home Orders</a>
        <a href="/admin/payment">Home Payments</a>
        <a class="active" href="/admin/order/all-order">Home Order Management</a>
        <a href="/admin/logout">Logout</a>
    </div>
    <div>
        <label for="yearSelect"><br> <strong> Hiển thị theo:</strong></label>
        <select id="yearSelect" name="yearSelect">
            <option value="totalPrice-desc">Chọn năm</option>
            <% distinctYears.forEach(year=> { %>
                <option value="<%= year %>">
                    <%= year %>
                </option>
                <% }); %>
        </select>
    </div>
    <div class="chart-container">
        <canvas id="myChartColumn" style="max-width: 900px "></canvas>
        <div id="myChartPie" style="max-width: 600px; "></div>
    </div>
    <script>
        document.getElementById('yearSelect').addEventListener('change', function (event) {
            const yearValue = event.target.value;
            window.location.href = `/admin/order/all-order-by-year?year=${yearValue}`;
        });

        document.addEventListener("DOMContentLoaded", function () {
            var yearSelected;
            updateColumnChart(<%- JSON.stringify(allOrder) %>, yearSelected); 
            updatePieChart(<%- JSON.stringify(allPayment) %>, <%- JSON.stringify(allOrder) %>, yearSelected);

        });
        function getDefaultBarColor(index) {
            const defaultColors = [
                "#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd",
                "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf",
                "#9edae5", "#c7c7c7"
            ];

            return defaultColors[index % defaultColors.length];
        }
        function updateColumnChart(orderData, yearSelected) {
            const allMonths = Array.from({ length: 12 }, (_, index) => index + 1);

            const orderCountMap = new Map(orderData.map(order => [order._id.month, order.orderCount]));

            const year = orderData.length > 0 && orderData[0]._id ? orderData[0]._id.year : yearSelected;

            const xValues = allMonths.map(month => month);
            const yValues = allMonths.map(month => orderCountMap.get(month) || 0);
            const barColors = allMonths.map((month, index) => {
                const order = orderData.find(order => order._id === month);
                return order ? order.barColor || getDefaultBarColor(index) : getDefaultBarColor(index);
            });

            const myChart = new Chart("myChartColumn", {
                type: "bar",
                data: {
                    labels: xValues,
                    datasets: [{
                        backgroundColor: barColors,
                        data: yValues
                    }]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: `Số lượng order trong năm ${year}`,
                        fontSize: 20
                    }
                }
            });
        }
        function updatePieChart(paymentData, orderData, yearSelected) {
            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(drawChart);

            const year = orderData.length > 0 && orderData[0]._id ? orderData[0]._id.year : yearSelected;
            function drawChart() {
                const data = google.visualization.arrayToDataTable([
                    ['isPaid', 'Mhl'],
                    ['Paypal', paymentData.paidPayments],
                    ['COD', paymentData.unpaidPayments],
                ]);
                const options = {
                    title: `Tổng số khách hàng đã mua hàng trong năm ${year}: ${paymentData.count}`,
                    fontSize: 20,
                    legend: { position: 'bottom' }
                };
                const chart = new google.visualization.PieChart(document.getElementById('myChartPie'));
                chart.draw(data, options);
            }
        }
        const access_token = localStorage.getItem('access_token');
        fetch('/admin/auth', {
            method: 'POST',
            headers: {
                'token': access_token,
                'Content-Type': 'application/json'
            },
        })
        .then(response => response.json())
        .then(data => {
            if (data.message === 'Unauthorized') {
                alert('You are not authorized to access this page');
                window.location.href = '/admin';
            } else {
                document.getElementById('ListContainer').style.display = 'block';
            }
        })
        .catch(error => console.error('Error:', error));
    </script>
</body>

</html>